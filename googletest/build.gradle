apply plugin: 'cpp'

def genSrc = "src"
task extractSources(type: Sync) {
    from {zipTree("gtest-1.7.0.zip")}
    into "${genSrc}"
}

binaries.all {
    if (it instanceof SharedLibraryBinarySpec) {
        cppCompiler.define "GTEST_CREATE_SHARED_LIBRARY", "1"
    }
}

model {
    components {
        gtest(NativeLibrarySpec) {
            sources {
                cpp(CppSourceSet) {
                    exportedHeaders.srcDir "${genSrc}/gtest-1.7.0/include"
                    exportedHeaders.srcDir "${genSrc}/gtest-1.7.0"
                    source.srcDir "${genSrc}/gtest-1.7.0"
                    source.include 'src/gtest-all.cc'
                }
            }
        }
    }
}
apply from: 'platform-config.gradle'

task buildStaticLibs {
    dependsOn binaries.withType(StaticLibraryBinary).matching {
        it.buildable
    }
}
task publish(type: Copy) {
    dependsOn buildStaticLibs
    into "../publish"
    from("${genSrc}/gtest-1.7.0/include") {
        into "include"
    }
    from("${buildDir}/binaries") {
        into "lib"
    }
}