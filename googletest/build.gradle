apply plugin: 'cpp'

def genSrc = "${buildDir}/src"
task extractSources(type: Sync) {
    from {zipTree("gtest-1.7.0.zip")}
    into "${genSrc}"
}

binaries.all {
    if (it instanceof SharedLibraryBinarySpec) {
        cppCompiler.define "GTEST_CREATE_SHARED_LIBRARY", "1"
    }
}

model {
    components {
        entryPoint(NativeLibrarySpec) {
            baseName 'gtest-entryPoint'
            sources {
                cpp(CppSourceSet) {
                    exportedHeaders.srcDir "${genSrc}/gtest-1.7.0/include"
                    source.srcDir "${genSrc}/gtest-1.7.0"
                    source.include 'src/gtest_main.cc'
                    lib library: 'core'
                }
            }
        }
        core(NativeLibrarySpec) {
            baseName 'gtest-core'
            sources {
                cpp(CppSourceSet) {
                    exportedHeaders.srcDir "${genSrc}/gtest-1.7.0/include"
                    exportedHeaders.srcDir "${genSrc}/gtest-1.7.0"
                    source.srcDir "${genSrc}/gtest-1.7.0"
                    source.include 'src/gtest-all.cc'
                }
            }

        }
    }
}
apply from: 'platform-config.gradle'
